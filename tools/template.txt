<?php

namespace Arris\Toolkit;

/**
 * Provides mappings of file extensions to mimetypes.

 * @link https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x/docs/conf/mime.types
 */
class MimeTypes implements MimeTypesInterface
{
    const GENERATED_AT = '%%generate_datetime%%';

    /**
     * An associative array with extension => mimetype mappings.
     *
     * Generated from source on %%generate_datetime%%
     *
     * mimes:       EXT      -> MIMETYPE
     * extensions:  MIMETYPE -> EXT
     */
    protected static array $mime_types = %%array_mime_types%%
    ;

    public static function getAllMimeTypes():array
    {
        return self::$mime_types['extensions'];
    }

    public static function getAllExtensions():array
    {
        return self::$mime_types['mimes'];
    }

    public static function fromType(string $mimetype):string
    {
        $mimetype = self::normalize($mimetype);
        return array_key_exists($mimetype, self::$mime_types['extensions'])
            ? self::$mime_types['extensions'][$mimetype]
            : '';
    }

    public static function fromFile(string $path):string
    {
        return self::fromType(
            self::getType($path)
        );
    }

    public static function fromExtension(string $extension):string
    {
       $extension = self::normalize($extension);
       return array_key_exists($extension, self::$mime_types['mimes']) ? self::$mime_types['mimes'][$extension] : self::UNKNOWN_MIME_TYPE;
    }

    public static function getType(string $path):string
    {
        return mime_content_type($path);
    }

    /**
     * Normalize the input string using lowercase/trim.
     *
     * @param string $input - The string to normalize.
     * @return string - The normalized string.
     */
    private static function normalize(string $input):string
    {
        return \trim(
            \strtolower(
                \trim($input)),
            '.'
        );
    }

    // aliases

    public static function getExtFromMime(string $mimetype):string
    {
        return self::fromType($mimetype);
    }

    public static function getExtFromFile(string $path):string
    {
        return self::fromFile($path);
    }

    public static function getMimeFromExt(string $extension):string
    {
        return self::fromExtension($extension);
    }

    public static function getMimeFromFile(string $path):string
    {
        return self::getType($path);
    }

# -eof-
